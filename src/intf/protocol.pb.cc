// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#include "protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_protocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_list_account_records_response_account_record_protocol_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_list_travel_records_rsponse_travel_record_protocol_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_rsponse_result_protocol_2eproto;
namespace tutorial {
class rsponse_resultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rsponse_result> _instance;
} _rsponse_result_default_instance_;
class mobile_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<mobile_request> _instance;
} _mobile_request_default_instance_;
class login_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<login_request> _instance;
} _login_request_default_instance_;
class recharge_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<recharge_request> _instance;
} _recharge_request_default_instance_;
class account_balance_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<account_balance_request> _instance;
} _account_balance_request_default_instance_;
class account_balance_responseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<account_balance_response> _instance;
} _account_balance_response_default_instance_;
class list_account_records_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<list_account_records_request> _instance;
} _list_account_records_request_default_instance_;
class list_account_records_response_account_recordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<list_account_records_response_account_record> _instance;
} _list_account_records_response_account_record_default_instance_;
class list_account_records_responseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<list_account_records_response> _instance;
} _list_account_records_response_default_instance_;
class list_travel_records_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<list_travel_records_request> _instance;
} _list_travel_records_request_default_instance_;
class list_travel_records_rsponse_travel_recordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<list_travel_records_rsponse_travel_record> _instance;
} _list_travel_records_rsponse_travel_record_default_instance_;
class list_travel_records_rsponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<list_travel_records_rsponse> _instance;
} _list_travel_records_rsponse_default_instance_;
}  // namespace tutorial
static void InitDefaultsrsponse_result_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_rsponse_result_default_instance_;
    new (ptr) ::tutorial::rsponse_result();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::rsponse_result::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rsponse_result_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrsponse_result_protocol_2eproto}, {}};

static void InitDefaultsmobile_request_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_mobile_request_default_instance_;
    new (ptr) ::tutorial::mobile_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::mobile_request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_mobile_request_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmobile_request_protocol_2eproto}, {}};

static void InitDefaultslogin_request_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_login_request_default_instance_;
    new (ptr) ::tutorial::login_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::login_request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_login_request_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultslogin_request_protocol_2eproto}, {}};

static void InitDefaultsrecharge_request_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_recharge_request_default_instance_;
    new (ptr) ::tutorial::recharge_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::recharge_request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_recharge_request_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrecharge_request_protocol_2eproto}, {}};

static void InitDefaultsaccount_balance_request_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_account_balance_request_default_instance_;
    new (ptr) ::tutorial::account_balance_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::account_balance_request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_account_balance_request_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsaccount_balance_request_protocol_2eproto}, {}};

static void InitDefaultsaccount_balance_response_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_account_balance_response_default_instance_;
    new (ptr) ::tutorial::account_balance_response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::account_balance_response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_account_balance_response_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsaccount_balance_response_protocol_2eproto}, {
      &scc_info_rsponse_result_protocol_2eproto.base,}};

static void InitDefaultslist_account_records_request_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_list_account_records_request_default_instance_;
    new (ptr) ::tutorial::list_account_records_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::list_account_records_request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_list_account_records_request_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultslist_account_records_request_protocol_2eproto}, {}};

static void InitDefaultslist_account_records_response_account_record_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_list_account_records_response_account_record_default_instance_;
    new (ptr) ::tutorial::list_account_records_response_account_record();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::list_account_records_response_account_record::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_list_account_records_response_account_record_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultslist_account_records_response_account_record_protocol_2eproto}, {}};

static void InitDefaultslist_account_records_response_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_list_account_records_response_default_instance_;
    new (ptr) ::tutorial::list_account_records_response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::list_account_records_response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_list_account_records_response_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultslist_account_records_response_protocol_2eproto}, {
      &scc_info_rsponse_result_protocol_2eproto.base,
      &scc_info_list_account_records_response_account_record_protocol_2eproto.base,}};

static void InitDefaultslist_travel_records_request_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_list_travel_records_request_default_instance_;
    new (ptr) ::tutorial::list_travel_records_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::list_travel_records_request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_list_travel_records_request_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultslist_travel_records_request_protocol_2eproto}, {}};

static void InitDefaultslist_travel_records_rsponse_travel_record_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_list_travel_records_rsponse_travel_record_default_instance_;
    new (ptr) ::tutorial::list_travel_records_rsponse_travel_record();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::list_travel_records_rsponse_travel_record::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_list_travel_records_rsponse_travel_record_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultslist_travel_records_rsponse_travel_record_protocol_2eproto}, {}};

static void InitDefaultslist_travel_records_rsponse_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_list_travel_records_rsponse_default_instance_;
    new (ptr) ::tutorial::list_travel_records_rsponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::list_travel_records_rsponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_list_travel_records_rsponse_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultslist_travel_records_rsponse_protocol_2eproto}, {
      &scc_info_rsponse_result_protocol_2eproto.base,
      &scc_info_list_travel_records_rsponse_travel_record_protocol_2eproto.base,}};

void InitDefaults_protocol_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_rsponse_result_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_mobile_request_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_login_request_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_recharge_request_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_account_balance_request_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_account_balance_response_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_list_account_records_request_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_list_account_records_response_account_record_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_list_account_records_response_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_list_travel_records_request_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_list_travel_records_rsponse_travel_record_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_list_travel_records_rsponse_protocol_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_protocol_2eproto[12];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_protocol_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_protocol_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_protocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::tutorial::rsponse_result, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tutorial::rsponse_result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tutorial::rsponse_result, code_),
  PROTOBUF_FIELD_OFFSET(::tutorial::rsponse_result, msg_),
  PROTOBUF_FIELD_OFFSET(::tutorial::rsponse_result, data_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tutorial::mobile_request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tutorial::mobile_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tutorial::mobile_request, mobile_),
  0,
  PROTOBUF_FIELD_OFFSET(::tutorial::login_request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tutorial::login_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tutorial::login_request, mobile_),
  PROTOBUF_FIELD_OFFSET(::tutorial::login_request, code_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tutorial::recharge_request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tutorial::recharge_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tutorial::recharge_request, mobile_),
  PROTOBUF_FIELD_OFFSET(::tutorial::recharge_request, amount_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tutorial::account_balance_request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tutorial::account_balance_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tutorial::account_balance_request, mobile_),
  0,
  PROTOBUF_FIELD_OFFSET(::tutorial::account_balance_response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tutorial::account_balance_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tutorial::account_balance_response, ret_),
  PROTOBUF_FIELD_OFFSET(::tutorial::account_balance_response, balance_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tutorial::list_account_records_request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_account_records_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tutorial::list_account_records_request, mobile_),
  0,
  PROTOBUF_FIELD_OFFSET(::tutorial::list_account_records_response_account_record, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_account_records_response_account_record, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tutorial::list_account_records_response_account_record, type_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_account_records_response_account_record, limit_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_account_records_response_account_record, timestamp_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::tutorial::list_account_records_response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_account_records_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tutorial::list_account_records_response, ret_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_account_records_response, records_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_request, mobile_),
  0,
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_rsponse_travel_record, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_rsponse_travel_record, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_rsponse_travel_record, stm_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_rsponse_travel_record, duration_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_rsponse_travel_record, amount_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_rsponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_rsponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_rsponse, ret_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_rsponse, mileage_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_rsponse, discharge_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_rsponse, calorie_),
  PROTOBUF_FIELD_OFFSET(::tutorial::list_travel_records_rsponse, records_),
  0,
  1,
  2,
  3,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::tutorial::rsponse_result)},
  { 11, 17, sizeof(::tutorial::mobile_request)},
  { 18, 25, sizeof(::tutorial::login_request)},
  { 27, 34, sizeof(::tutorial::recharge_request)},
  { 36, 42, sizeof(::tutorial::account_balance_request)},
  { 43, 50, sizeof(::tutorial::account_balance_response)},
  { 52, 58, sizeof(::tutorial::list_account_records_request)},
  { 59, 67, sizeof(::tutorial::list_account_records_response_account_record)},
  { 70, 77, sizeof(::tutorial::list_account_records_response)},
  { 79, 85, sizeof(::tutorial::list_travel_records_request)},
  { 86, 94, sizeof(::tutorial::list_travel_records_rsponse_travel_record)},
  { 97, 107, sizeof(::tutorial::list_travel_records_rsponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_rsponse_result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_mobile_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_login_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_recharge_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_account_balance_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_account_balance_response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_list_account_records_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_list_account_records_response_account_record_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_list_account_records_response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_list_travel_records_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_list_travel_records_rsponse_travel_record_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_list_travel_records_rsponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_protocol_2eproto = {
  {}, AddDescriptors_protocol_2eproto, "protocol.proto", schemas,
  file_default_instances, TableStruct_protocol_2eproto::offsets,
  file_level_metadata_protocol_2eproto, 12, file_level_enum_descriptors_protocol_2eproto, file_level_service_descriptors_protocol_2eproto,
};

const char descriptor_table_protodef_protocol_2eproto[] =
  "\n\016protocol.proto\022\010tutorial\"9\n\016rsponse_re"
  "sult\022\014\n\004code\030\001 \002(\005\022\013\n\003msg\030\002 \002(\t\022\014\n\004data\030"
  "\003 \001(\t\" \n\016mobile_request\022\016\n\006mobile\030\001 \002(\t\""
  "-\n\rlogin_request\022\016\n\006mobile\030\001 \002(\t\022\014\n\004code"
  "\030\002 \002(\005\"2\n\020recharge_request\022\016\n\006mobile\030\001 \002"
  "(\t\022\016\n\006amount\030\002 \002(\005\")\n\027account_balance_re"
  "quest\022\016\n\006mobile\030\001 \002(\t\"R\n\030account_balance"
  "_response\022%\n\003ret\030\001 \002(\0132\030.tutorial.rspons"
  "e_result\022\017\n\007balance\030\002 \002(\005\".\n\034list_accoun"
  "t_records_request\022\016\n\006mobile\030\001 \002(\t\"\321\001\n\035li"
  "st_account_records_response\022%\n\003ret\030\001 \002(\013"
  "2\030.tutorial.rsponse_result\022G\n\007records\030\002 "
  "\003(\01326.tutorial.list_account_records_resp"
  "onse.account_record\032@\n\016account_record\022\014\n"
  "\004type\030\001 \002(\005\022\r\n\005limit\030\002 \002(\005\022\021\n\ttimestamp\030"
  "\003 \002(\004\"-\n\033list_travel_records_request\022\016\n\006"
  "mobile\030\001 \002(\t\"\377\001\n\033list_travel_records_rsp"
  "onse\022%\n\003ret\030\001 \002(\0132\030.tutorial.rsponse_res"
  "ult\022\017\n\007mileage\030\002 \002(\001\022\021\n\tdischarge\030\003 \002(\001\022"
  "\017\n\007calorie\030\004 \002(\001\022D\n\007records\030\005 \003(\01323.tuto"
  "rial.list_travel_records_rsponse.travel_"
  "record\032>\n\rtravel_record\022\013\n\003stm\030\001 \002(\004\022\020\n\010"
  "duration\030\002 \002(\r\022\016\n\006amount\030\003 \002(\r"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_protocol_2eproto = {
  false, InitDefaults_protocol_2eproto, 
  descriptor_table_protodef_protocol_2eproto,
  "protocol.proto", &assign_descriptors_table_protocol_2eproto, 910,
};

void AddDescriptors_protocol_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_protocol_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protocol_2eproto = []() { AddDescriptors_protocol_2eproto(); return true; }();
namespace tutorial {

// ===================================================================

void rsponse_result::InitAsDefaultInstance() {
}
class rsponse_result::HasBitSetters {
 public:
  static void set_has_code(rsponse_result* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_msg(rsponse_result* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_data(rsponse_result* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsponse_result::kCodeFieldNumber;
const int rsponse_result::kMsgFieldNumber;
const int rsponse_result::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsponse_result::rsponse_result()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.rsponse_result)
}
rsponse_result::rsponse_result(const rsponse_result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:tutorial.rsponse_result)
}

void rsponse_result::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_rsponse_result_protocol_2eproto.base);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

rsponse_result::~rsponse_result() {
  // @@protoc_insertion_point(destructor:tutorial.rsponse_result)
  SharedDtor();
}

void rsponse_result::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void rsponse_result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const rsponse_result& rsponse_result::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_rsponse_result_protocol_2eproto.base);
  return *internal_default_instance();
}


void rsponse_result::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.rsponse_result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* rsponse_result::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<rsponse_result*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_code(value);
        break;
      }
      // required string msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tutorial.rsponse_result.msg");
        auto str = msg->mutable_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tutorial.rsponse_result.data");
        auto str = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool rsponse_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.rsponse_result)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_code(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tutorial.rsponse_result.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tutorial.rsponse_result.data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.rsponse_result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.rsponse_result)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void rsponse_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.rsponse_result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // required string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.rsponse_result.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional string data = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.rsponse_result.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.rsponse_result)
}

::google::protobuf::uint8* rsponse_result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.rsponse_result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // required string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.rsponse_result.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional string data = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.rsponse_result.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.rsponse_result)
  return target;
}

size_t rsponse_result::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tutorial.rsponse_result)
  size_t total_size = 0;

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  if (has_code()) {
    // required int32 code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  return total_size;
}
size_t rsponse_result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.rsponse_result)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

    // required int32 code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string data = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rsponse_result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.rsponse_result)
  GOOGLE_DCHECK_NE(&from, this);
  const rsponse_result* source =
      ::google::protobuf::DynamicCastToGenerated<rsponse_result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.rsponse_result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.rsponse_result)
    MergeFrom(*source);
  }
}

void rsponse_result::MergeFrom(const rsponse_result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.rsponse_result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void rsponse_result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.rsponse_result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsponse_result::CopyFrom(const rsponse_result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.rsponse_result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsponse_result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void rsponse_result::Swap(rsponse_result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsponse_result::InternalSwap(rsponse_result* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
}

::google::protobuf::Metadata rsponse_result::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void mobile_request::InitAsDefaultInstance() {
}
class mobile_request::HasBitSetters {
 public:
  static void set_has_mobile(mobile_request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mobile_request::kMobileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mobile_request::mobile_request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.mobile_request)
}
mobile_request::mobile_request(const mobile_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mobile()) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  // @@protoc_insertion_point(copy_constructor:tutorial.mobile_request)
}

void mobile_request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_mobile_request_protocol_2eproto.base);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

mobile_request::~mobile_request() {
  // @@protoc_insertion_point(destructor:tutorial.mobile_request)
  SharedDtor();
}

void mobile_request::SharedDtor() {
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void mobile_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const mobile_request& mobile_request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_mobile_request_protocol_2eproto.base);
  return *internal_default_instance();
}


void mobile_request::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.mobile_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    mobile_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* mobile_request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<mobile_request*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string mobile = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tutorial.mobile_request.mobile");
        auto str = msg->mutable_mobile();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool mobile_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.mobile_request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string mobile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mobile().data(), static_cast<int>(this->mobile().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tutorial.mobile_request.mobile");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.mobile_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.mobile_request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void mobile_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.mobile_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.mobile_request.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mobile(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.mobile_request)
}

::google::protobuf::uint8* mobile_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.mobile_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.mobile_request.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mobile(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.mobile_request)
  return target;
}

size_t mobile_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.mobile_request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string mobile = 1;
  if (has_mobile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mobile_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.mobile_request)
  GOOGLE_DCHECK_NE(&from, this);
  const mobile_request* source =
      ::google::protobuf::DynamicCastToGenerated<mobile_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.mobile_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.mobile_request)
    MergeFrom(*source);
  }
}

void mobile_request::MergeFrom(const mobile_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.mobile_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mobile()) {
    _has_bits_[0] |= 0x00000001u;
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
}

void mobile_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.mobile_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mobile_request::CopyFrom(const mobile_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.mobile_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mobile_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void mobile_request::Swap(mobile_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mobile_request::InternalSwap(mobile_request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mobile_.Swap(&other->mobile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata mobile_request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void login_request::InitAsDefaultInstance() {
}
class login_request::HasBitSetters {
 public:
  static void set_has_mobile(login_request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_code(login_request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int login_request::kMobileFieldNumber;
const int login_request::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

login_request::login_request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.login_request)
}
login_request::login_request(const login_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mobile()) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:tutorial.login_request)
}

void login_request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_login_request_protocol_2eproto.base);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

login_request::~login_request() {
  // @@protoc_insertion_point(destructor:tutorial.login_request)
  SharedDtor();
}

void login_request::SharedDtor() {
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void login_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const login_request& login_request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_login_request_protocol_2eproto.base);
  return *internal_default_instance();
}


void login_request::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.login_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    mobile_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* login_request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<login_request*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string mobile = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tutorial.login_request.mobile");
        auto str = msg->mutable_mobile();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 code = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_code(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool login_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.login_request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string mobile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mobile().data(), static_cast<int>(this->mobile().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tutorial.login_request.mobile");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_code(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.login_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.login_request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void login_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.login_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.login_request.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mobile(), output);
  }

  // required int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.login_request)
}

::google::protobuf::uint8* login_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.login_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.login_request.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mobile(), target);
  }

  // required int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.login_request)
  return target;
}

size_t login_request::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tutorial.login_request)
  size_t total_size = 0;

  if (has_mobile()) {
    // required string mobile = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  if (has_code()) {
    // required int32 code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  return total_size;
}
size_t login_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.login_request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string mobile = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());

    // required int32 code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void login_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.login_request)
  GOOGLE_DCHECK_NE(&from, this);
  const login_request* source =
      ::google::protobuf::DynamicCastToGenerated<login_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.login_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.login_request)
    MergeFrom(*source);
  }
}

void login_request::MergeFrom(const login_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.login_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void login_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.login_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void login_request::CopyFrom(const login_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.login_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool login_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void login_request::Swap(login_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void login_request::InternalSwap(login_request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mobile_.Swap(&other->mobile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
}

::google::protobuf::Metadata login_request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void recharge_request::InitAsDefaultInstance() {
}
class recharge_request::HasBitSetters {
 public:
  static void set_has_mobile(recharge_request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_amount(recharge_request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int recharge_request::kMobileFieldNumber;
const int recharge_request::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

recharge_request::recharge_request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.recharge_request)
}
recharge_request::recharge_request(const recharge_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mobile()) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:tutorial.recharge_request)
}

void recharge_request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_recharge_request_protocol_2eproto.base);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = 0;
}

recharge_request::~recharge_request() {
  // @@protoc_insertion_point(destructor:tutorial.recharge_request)
  SharedDtor();
}

void recharge_request::SharedDtor() {
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void recharge_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const recharge_request& recharge_request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_recharge_request_protocol_2eproto.base);
  return *internal_default_instance();
}


void recharge_request::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.recharge_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    mobile_.ClearNonDefaultToEmptyNoArena();
  }
  amount_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* recharge_request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<recharge_request*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string mobile = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tutorial.recharge_request.mobile");
        auto str = msg->mutable_mobile();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 amount = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_amount(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool recharge_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.recharge_request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string mobile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mobile().data(), static_cast<int>(this->mobile().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tutorial.recharge_request.mobile");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_amount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.recharge_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.recharge_request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void recharge_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.recharge_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.recharge_request.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mobile(), output);
  }

  // required int32 amount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.recharge_request)
}

::google::protobuf::uint8* recharge_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.recharge_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.recharge_request.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mobile(), target);
  }

  // required int32 amount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.recharge_request)
  return target;
}

size_t recharge_request::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tutorial.recharge_request)
  size_t total_size = 0;

  if (has_mobile()) {
    // required string mobile = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  if (has_amount()) {
    // required int32 amount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());
  }

  return total_size;
}
size_t recharge_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.recharge_request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string mobile = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());

    // required int32 amount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void recharge_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.recharge_request)
  GOOGLE_DCHECK_NE(&from, this);
  const recharge_request* source =
      ::google::protobuf::DynamicCastToGenerated<recharge_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.recharge_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.recharge_request)
    MergeFrom(*source);
  }
}

void recharge_request::MergeFrom(const recharge_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.recharge_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
    }
    if (cached_has_bits & 0x00000002u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void recharge_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.recharge_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void recharge_request::CopyFrom(const recharge_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.recharge_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool recharge_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void recharge_request::Swap(recharge_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void recharge_request::InternalSwap(recharge_request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mobile_.Swap(&other->mobile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
}

::google::protobuf::Metadata recharge_request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void account_balance_request::InitAsDefaultInstance() {
}
class account_balance_request::HasBitSetters {
 public:
  static void set_has_mobile(account_balance_request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int account_balance_request::kMobileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

account_balance_request::account_balance_request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.account_balance_request)
}
account_balance_request::account_balance_request(const account_balance_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mobile()) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  // @@protoc_insertion_point(copy_constructor:tutorial.account_balance_request)
}

void account_balance_request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_account_balance_request_protocol_2eproto.base);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

account_balance_request::~account_balance_request() {
  // @@protoc_insertion_point(destructor:tutorial.account_balance_request)
  SharedDtor();
}

void account_balance_request::SharedDtor() {
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void account_balance_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const account_balance_request& account_balance_request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_account_balance_request_protocol_2eproto.base);
  return *internal_default_instance();
}


void account_balance_request::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.account_balance_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    mobile_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* account_balance_request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<account_balance_request*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string mobile = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tutorial.account_balance_request.mobile");
        auto str = msg->mutable_mobile();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool account_balance_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.account_balance_request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string mobile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mobile().data(), static_cast<int>(this->mobile().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tutorial.account_balance_request.mobile");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.account_balance_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.account_balance_request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void account_balance_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.account_balance_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.account_balance_request.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mobile(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.account_balance_request)
}

::google::protobuf::uint8* account_balance_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.account_balance_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.account_balance_request.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mobile(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.account_balance_request)
  return target;
}

size_t account_balance_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.account_balance_request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string mobile = 1;
  if (has_mobile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void account_balance_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.account_balance_request)
  GOOGLE_DCHECK_NE(&from, this);
  const account_balance_request* source =
      ::google::protobuf::DynamicCastToGenerated<account_balance_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.account_balance_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.account_balance_request)
    MergeFrom(*source);
  }
}

void account_balance_request::MergeFrom(const account_balance_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.account_balance_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mobile()) {
    _has_bits_[0] |= 0x00000001u;
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
}

void account_balance_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.account_balance_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void account_balance_request::CopyFrom(const account_balance_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.account_balance_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool account_balance_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void account_balance_request::Swap(account_balance_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void account_balance_request::InternalSwap(account_balance_request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mobile_.Swap(&other->mobile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata account_balance_request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void account_balance_response::InitAsDefaultInstance() {
  ::tutorial::_account_balance_response_default_instance_._instance.get_mutable()->ret_ = const_cast< ::tutorial::rsponse_result*>(
      ::tutorial::rsponse_result::internal_default_instance());
}
class account_balance_response::HasBitSetters {
 public:
  static const ::tutorial::rsponse_result& ret(const account_balance_response* msg);
  static void set_has_ret(account_balance_response* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_balance(account_balance_response* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::tutorial::rsponse_result&
account_balance_response::HasBitSetters::ret(const account_balance_response* msg) {
  return *msg->ret_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int account_balance_response::kRetFieldNumber;
const int account_balance_response::kBalanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

account_balance_response::account_balance_response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.account_balance_response)
}
account_balance_response::account_balance_response(const account_balance_response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ret()) {
    ret_ = new ::tutorial::rsponse_result(*from.ret_);
  } else {
    ret_ = nullptr;
  }
  balance_ = from.balance_;
  // @@protoc_insertion_point(copy_constructor:tutorial.account_balance_response)
}

void account_balance_response::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_account_balance_response_protocol_2eproto.base);
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&balance_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(balance_));
}

account_balance_response::~account_balance_response() {
  // @@protoc_insertion_point(destructor:tutorial.account_balance_response)
  SharedDtor();
}

void account_balance_response::SharedDtor() {
  if (this != internal_default_instance()) delete ret_;
}

void account_balance_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const account_balance_response& account_balance_response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_account_balance_response_protocol_2eproto.base);
  return *internal_default_instance();
}


void account_balance_response::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.account_balance_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(ret_ != nullptr);
    ret_->Clear();
  }
  balance_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* account_balance_response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<account_balance_response*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .tutorial.rsponse_result ret = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tutorial::rsponse_result::_InternalParse;
        object = msg->mutable_ret();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // required int32 balance = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_balance(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool account_balance_response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.account_balance_response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .tutorial.rsponse_result ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 balance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_balance(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.account_balance_response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.account_balance_response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void account_balance_response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.account_balance_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .tutorial.rsponse_result ret = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::ret(this), output);
  }

  // required int32 balance = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->balance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.account_balance_response)
}

::google::protobuf::uint8* account_balance_response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.account_balance_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .tutorial.rsponse_result ret = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::ret(this), deterministic, target);
  }

  // required int32 balance = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->balance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.account_balance_response)
  return target;
}

size_t account_balance_response::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tutorial.account_balance_response)
  size_t total_size = 0;

  if (has_ret()) {
    // required .tutorial.rsponse_result ret = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ret_);
  }

  if (has_balance()) {
    // required int32 balance = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->balance());
  }

  return total_size;
}
size_t account_balance_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.account_balance_response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .tutorial.rsponse_result ret = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ret_);

    // required int32 balance = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->balance());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void account_balance_response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.account_balance_response)
  GOOGLE_DCHECK_NE(&from, this);
  const account_balance_response* source =
      ::google::protobuf::DynamicCastToGenerated<account_balance_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.account_balance_response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.account_balance_response)
    MergeFrom(*source);
  }
}

void account_balance_response::MergeFrom(const account_balance_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.account_balance_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_ret()->::tutorial::rsponse_result::MergeFrom(from.ret());
    }
    if (cached_has_bits & 0x00000002u) {
      balance_ = from.balance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void account_balance_response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.account_balance_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void account_balance_response::CopyFrom(const account_balance_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.account_balance_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool account_balance_response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_ret()) {
    if (!this->ret_->IsInitialized()) return false;
  }
  return true;
}

void account_balance_response::Swap(account_balance_response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void account_balance_response::InternalSwap(account_balance_response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ret_, other->ret_);
  swap(balance_, other->balance_);
}

::google::protobuf::Metadata account_balance_response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void list_account_records_request::InitAsDefaultInstance() {
}
class list_account_records_request::HasBitSetters {
 public:
  static void set_has_mobile(list_account_records_request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int list_account_records_request::kMobileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

list_account_records_request::list_account_records_request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.list_account_records_request)
}
list_account_records_request::list_account_records_request(const list_account_records_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mobile()) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  // @@protoc_insertion_point(copy_constructor:tutorial.list_account_records_request)
}

void list_account_records_request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_list_account_records_request_protocol_2eproto.base);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

list_account_records_request::~list_account_records_request() {
  // @@protoc_insertion_point(destructor:tutorial.list_account_records_request)
  SharedDtor();
}

void list_account_records_request::SharedDtor() {
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void list_account_records_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const list_account_records_request& list_account_records_request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_list_account_records_request_protocol_2eproto.base);
  return *internal_default_instance();
}


void list_account_records_request::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.list_account_records_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    mobile_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* list_account_records_request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<list_account_records_request*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string mobile = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tutorial.list_account_records_request.mobile");
        auto str = msg->mutable_mobile();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool list_account_records_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.list_account_records_request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string mobile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mobile().data(), static_cast<int>(this->mobile().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tutorial.list_account_records_request.mobile");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.list_account_records_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.list_account_records_request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void list_account_records_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.list_account_records_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.list_account_records_request.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mobile(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.list_account_records_request)
}

::google::protobuf::uint8* list_account_records_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.list_account_records_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.list_account_records_request.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mobile(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.list_account_records_request)
  return target;
}

size_t list_account_records_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.list_account_records_request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string mobile = 1;
  if (has_mobile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void list_account_records_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.list_account_records_request)
  GOOGLE_DCHECK_NE(&from, this);
  const list_account_records_request* source =
      ::google::protobuf::DynamicCastToGenerated<list_account_records_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.list_account_records_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.list_account_records_request)
    MergeFrom(*source);
  }
}

void list_account_records_request::MergeFrom(const list_account_records_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.list_account_records_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mobile()) {
    _has_bits_[0] |= 0x00000001u;
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
}

void list_account_records_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.list_account_records_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void list_account_records_request::CopyFrom(const list_account_records_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.list_account_records_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool list_account_records_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void list_account_records_request::Swap(list_account_records_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void list_account_records_request::InternalSwap(list_account_records_request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mobile_.Swap(&other->mobile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata list_account_records_request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void list_account_records_response_account_record::InitAsDefaultInstance() {
}
class list_account_records_response_account_record::HasBitSetters {
 public:
  static void set_has_type(list_account_records_response_account_record* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_limit(list_account_records_response_account_record* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_timestamp(list_account_records_response_account_record* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int list_account_records_response_account_record::kTypeFieldNumber;
const int list_account_records_response_account_record::kLimitFieldNumber;
const int list_account_records_response_account_record::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

list_account_records_response_account_record::list_account_records_response_account_record()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.list_account_records_response.account_record)
}
list_account_records_response_account_record::list_account_records_response_account_record(const list_account_records_response_account_record& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&type_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:tutorial.list_account_records_response.account_record)
}

void list_account_records_response_account_record::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&type_)) + sizeof(timestamp_));
}

list_account_records_response_account_record::~list_account_records_response_account_record() {
  // @@protoc_insertion_point(destructor:tutorial.list_account_records_response.account_record)
  SharedDtor();
}

void list_account_records_response_account_record::SharedDtor() {
}

void list_account_records_response_account_record::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const list_account_records_response_account_record& list_account_records_response_account_record::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_list_account_records_response_account_record_protocol_2eproto.base);
  return *internal_default_instance();
}


void list_account_records_response_account_record::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.list_account_records_response.account_record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&type_)) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* list_account_records_response_account_record::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<list_account_records_response_account_record*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_type(value);
        break;
      }
      // required int32 limit = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_limit(value);
        break;
      }
      // required uint64 timestamp = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::uint64 value = val;
        msg->set_timestamp(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool list_account_records_response_account_record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.list_account_records_response.account_record)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 limit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_limit(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_timestamp(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.list_account_records_response.account_record)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.list_account_records_response.account_record)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void list_account_records_response_account_record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.list_account_records_response.account_record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required int32 limit = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->limit(), output);
  }

  // required uint64 timestamp = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.list_account_records_response.account_record)
}

::google::protobuf::uint8* list_account_records_response_account_record::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.list_account_records_response.account_record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // required int32 limit = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->limit(), target);
  }

  // required uint64 timestamp = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.list_account_records_response.account_record)
  return target;
}

size_t list_account_records_response_account_record::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tutorial.list_account_records_response.account_record)
  size_t total_size = 0;

  if (has_type()) {
    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_limit()) {
    // required int32 limit = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  if (has_timestamp()) {
    // required uint64 timestamp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  return total_size;
}
size_t list_account_records_response_account_record::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.list_account_records_response.account_record)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required int32 limit = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());

    // required uint64 timestamp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void list_account_records_response_account_record::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.list_account_records_response.account_record)
  GOOGLE_DCHECK_NE(&from, this);
  const list_account_records_response_account_record* source =
      ::google::protobuf::DynamicCastToGenerated<list_account_records_response_account_record>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.list_account_records_response.account_record)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.list_account_records_response.account_record)
    MergeFrom(*source);
  }
}

void list_account_records_response_account_record::MergeFrom(const list_account_records_response_account_record& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.list_account_records_response.account_record)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      limit_ = from.limit_;
    }
    if (cached_has_bits & 0x00000004u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void list_account_records_response_account_record::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.list_account_records_response.account_record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void list_account_records_response_account_record::CopyFrom(const list_account_records_response_account_record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.list_account_records_response.account_record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool list_account_records_response_account_record::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void list_account_records_response_account_record::Swap(list_account_records_response_account_record* other) {
  if (other == this) return;
  InternalSwap(other);
}
void list_account_records_response_account_record::InternalSwap(list_account_records_response_account_record* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(type_, other->type_);
  swap(limit_, other->limit_);
  swap(timestamp_, other->timestamp_);
}

::google::protobuf::Metadata list_account_records_response_account_record::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void list_account_records_response::InitAsDefaultInstance() {
  ::tutorial::_list_account_records_response_default_instance_._instance.get_mutable()->ret_ = const_cast< ::tutorial::rsponse_result*>(
      ::tutorial::rsponse_result::internal_default_instance());
}
class list_account_records_response::HasBitSetters {
 public:
  static const ::tutorial::rsponse_result& ret(const list_account_records_response* msg);
  static void set_has_ret(list_account_records_response* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::tutorial::rsponse_result&
list_account_records_response::HasBitSetters::ret(const list_account_records_response* msg) {
  return *msg->ret_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int list_account_records_response::kRetFieldNumber;
const int list_account_records_response::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

list_account_records_response::list_account_records_response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.list_account_records_response)
}
list_account_records_response::list_account_records_response(const list_account_records_response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      records_(from.records_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ret()) {
    ret_ = new ::tutorial::rsponse_result(*from.ret_);
  } else {
    ret_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tutorial.list_account_records_response)
}

void list_account_records_response::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_list_account_records_response_protocol_2eproto.base);
  ret_ = nullptr;
}

list_account_records_response::~list_account_records_response() {
  // @@protoc_insertion_point(destructor:tutorial.list_account_records_response)
  SharedDtor();
}

void list_account_records_response::SharedDtor() {
  if (this != internal_default_instance()) delete ret_;
}

void list_account_records_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const list_account_records_response& list_account_records_response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_list_account_records_response_protocol_2eproto.base);
  return *internal_default_instance();
}


void list_account_records_response::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.list_account_records_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  records_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(ret_ != nullptr);
    ret_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* list_account_records_response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<list_account_records_response*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .tutorial.rsponse_result ret = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tutorial::rsponse_result::_InternalParse;
        object = msg->mutable_ret();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // repeated .tutorial.list_account_records_response.account_record records = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::tutorial::list_account_records_response_account_record::_InternalParse;
          object = msg->add_records();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          bool ok = ctx->ParseExactRange({parser_till_end, object},
                                         ptr, newend);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool list_account_records_response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.list_account_records_response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .tutorial.rsponse_result ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tutorial.list_account_records_response.account_record records = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.list_account_records_response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.list_account_records_response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void list_account_records_response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.list_account_records_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .tutorial.rsponse_result ret = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::ret(this), output);
  }

  // repeated .tutorial.list_account_records_response.account_record records = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->records(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.list_account_records_response)
}

::google::protobuf::uint8* list_account_records_response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.list_account_records_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .tutorial.rsponse_result ret = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::ret(this), deterministic, target);
  }

  // repeated .tutorial.list_account_records_response.account_record records = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->records(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.list_account_records_response)
  return target;
}

size_t list_account_records_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.list_account_records_response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .tutorial.rsponse_result ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ret_);
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tutorial.list_account_records_response.account_record records = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->records_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->records(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void list_account_records_response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.list_account_records_response)
  GOOGLE_DCHECK_NE(&from, this);
  const list_account_records_response* source =
      ::google::protobuf::DynamicCastToGenerated<list_account_records_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.list_account_records_response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.list_account_records_response)
    MergeFrom(*source);
  }
}

void list_account_records_response::MergeFrom(const list_account_records_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.list_account_records_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  records_.MergeFrom(from.records_);
  if (from.has_ret()) {
    mutable_ret()->::tutorial::rsponse_result::MergeFrom(from.ret());
  }
}

void list_account_records_response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.list_account_records_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void list_account_records_response::CopyFrom(const list_account_records_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.list_account_records_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool list_account_records_response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->records())) return false;
  if (has_ret()) {
    if (!this->ret_->IsInitialized()) return false;
  }
  return true;
}

void list_account_records_response::Swap(list_account_records_response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void list_account_records_response::InternalSwap(list_account_records_response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&records_)->InternalSwap(CastToBase(&other->records_));
  swap(ret_, other->ret_);
}

::google::protobuf::Metadata list_account_records_response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void list_travel_records_request::InitAsDefaultInstance() {
}
class list_travel_records_request::HasBitSetters {
 public:
  static void set_has_mobile(list_travel_records_request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int list_travel_records_request::kMobileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

list_travel_records_request::list_travel_records_request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.list_travel_records_request)
}
list_travel_records_request::list_travel_records_request(const list_travel_records_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mobile()) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  // @@protoc_insertion_point(copy_constructor:tutorial.list_travel_records_request)
}

void list_travel_records_request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_list_travel_records_request_protocol_2eproto.base);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

list_travel_records_request::~list_travel_records_request() {
  // @@protoc_insertion_point(destructor:tutorial.list_travel_records_request)
  SharedDtor();
}

void list_travel_records_request::SharedDtor() {
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void list_travel_records_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const list_travel_records_request& list_travel_records_request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_list_travel_records_request_protocol_2eproto.base);
  return *internal_default_instance();
}


void list_travel_records_request::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.list_travel_records_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    mobile_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* list_travel_records_request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<list_travel_records_request*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string mobile = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tutorial.list_travel_records_request.mobile");
        auto str = msg->mutable_mobile();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool list_travel_records_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.list_travel_records_request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string mobile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mobile().data(), static_cast<int>(this->mobile().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tutorial.list_travel_records_request.mobile");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.list_travel_records_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.list_travel_records_request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void list_travel_records_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.list_travel_records_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.list_travel_records_request.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mobile(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.list_travel_records_request)
}

::google::protobuf::uint8* list_travel_records_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.list_travel_records_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tutorial.list_travel_records_request.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mobile(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.list_travel_records_request)
  return target;
}

size_t list_travel_records_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.list_travel_records_request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string mobile = 1;
  if (has_mobile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void list_travel_records_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.list_travel_records_request)
  GOOGLE_DCHECK_NE(&from, this);
  const list_travel_records_request* source =
      ::google::protobuf::DynamicCastToGenerated<list_travel_records_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.list_travel_records_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.list_travel_records_request)
    MergeFrom(*source);
  }
}

void list_travel_records_request::MergeFrom(const list_travel_records_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.list_travel_records_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mobile()) {
    _has_bits_[0] |= 0x00000001u;
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
}

void list_travel_records_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.list_travel_records_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void list_travel_records_request::CopyFrom(const list_travel_records_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.list_travel_records_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool list_travel_records_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void list_travel_records_request::Swap(list_travel_records_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void list_travel_records_request::InternalSwap(list_travel_records_request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mobile_.Swap(&other->mobile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata list_travel_records_request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void list_travel_records_rsponse_travel_record::InitAsDefaultInstance() {
}
class list_travel_records_rsponse_travel_record::HasBitSetters {
 public:
  static void set_has_stm(list_travel_records_rsponse_travel_record* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_duration(list_travel_records_rsponse_travel_record* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_amount(list_travel_records_rsponse_travel_record* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int list_travel_records_rsponse_travel_record::kStmFieldNumber;
const int list_travel_records_rsponse_travel_record::kDurationFieldNumber;
const int list_travel_records_rsponse_travel_record::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

list_travel_records_rsponse_travel_record::list_travel_records_rsponse_travel_record()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.list_travel_records_rsponse.travel_record)
}
list_travel_records_rsponse_travel_record::list_travel_records_rsponse_travel_record(const list_travel_records_rsponse_travel_record& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stm_, &from.stm_,
    static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&stm_)) + sizeof(amount_));
  // @@protoc_insertion_point(copy_constructor:tutorial.list_travel_records_rsponse.travel_record)
}

void list_travel_records_rsponse_travel_record::SharedCtor() {
  ::memset(&stm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&stm_)) + sizeof(amount_));
}

list_travel_records_rsponse_travel_record::~list_travel_records_rsponse_travel_record() {
  // @@protoc_insertion_point(destructor:tutorial.list_travel_records_rsponse.travel_record)
  SharedDtor();
}

void list_travel_records_rsponse_travel_record::SharedDtor() {
}

void list_travel_records_rsponse_travel_record::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const list_travel_records_rsponse_travel_record& list_travel_records_rsponse_travel_record::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_list_travel_records_rsponse_travel_record_protocol_2eproto.base);
  return *internal_default_instance();
}


void list_travel_records_rsponse_travel_record::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.list_travel_records_rsponse.travel_record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&stm_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&amount_) -
        reinterpret_cast<char*>(&stm_)) + sizeof(amount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* list_travel_records_rsponse_travel_record::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<list_travel_records_rsponse_travel_record*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint64 stm = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::uint64 value = val;
        msg->set_stm(value);
        break;
      }
      // required uint32 duration = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::uint32 value = val;
        msg->set_duration(value);
        break;
      }
      // required uint32 amount = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::uint32 value = val;
        msg->set_amount(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool list_travel_records_rsponse_travel_record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.list_travel_records_rsponse.travel_record)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 stm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_stm(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &stm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_duration(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_amount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.list_travel_records_rsponse.travel_record)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.list_travel_records_rsponse.travel_record)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void list_travel_records_rsponse_travel_record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.list_travel_records_rsponse.travel_record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 stm = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->stm(), output);
  }

  // required uint32 duration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->duration(), output);
  }

  // required uint32 amount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.list_travel_records_rsponse.travel_record)
}

::google::protobuf::uint8* list_travel_records_rsponse_travel_record::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.list_travel_records_rsponse.travel_record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 stm = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->stm(), target);
  }

  // required uint32 duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->duration(), target);
  }

  // required uint32 amount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.list_travel_records_rsponse.travel_record)
  return target;
}

size_t list_travel_records_rsponse_travel_record::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tutorial.list_travel_records_rsponse.travel_record)
  size_t total_size = 0;

  if (has_stm()) {
    // required uint64 stm = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->stm());
  }

  if (has_duration()) {
    // required uint32 duration = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->duration());
  }

  if (has_amount()) {
    // required uint32 amount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->amount());
  }

  return total_size;
}
size_t list_travel_records_rsponse_travel_record::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.list_travel_records_rsponse.travel_record)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 stm = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->stm());

    // required uint32 duration = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->duration());

    // required uint32 amount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->amount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void list_travel_records_rsponse_travel_record::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.list_travel_records_rsponse.travel_record)
  GOOGLE_DCHECK_NE(&from, this);
  const list_travel_records_rsponse_travel_record* source =
      ::google::protobuf::DynamicCastToGenerated<list_travel_records_rsponse_travel_record>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.list_travel_records_rsponse.travel_record)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.list_travel_records_rsponse.travel_record)
    MergeFrom(*source);
  }
}

void list_travel_records_rsponse_travel_record::MergeFrom(const list_travel_records_rsponse_travel_record& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.list_travel_records_rsponse.travel_record)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      stm_ = from.stm_;
    }
    if (cached_has_bits & 0x00000002u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000004u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void list_travel_records_rsponse_travel_record::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.list_travel_records_rsponse.travel_record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void list_travel_records_rsponse_travel_record::CopyFrom(const list_travel_records_rsponse_travel_record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.list_travel_records_rsponse.travel_record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool list_travel_records_rsponse_travel_record::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void list_travel_records_rsponse_travel_record::Swap(list_travel_records_rsponse_travel_record* other) {
  if (other == this) return;
  InternalSwap(other);
}
void list_travel_records_rsponse_travel_record::InternalSwap(list_travel_records_rsponse_travel_record* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(stm_, other->stm_);
  swap(duration_, other->duration_);
  swap(amount_, other->amount_);
}

::google::protobuf::Metadata list_travel_records_rsponse_travel_record::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void list_travel_records_rsponse::InitAsDefaultInstance() {
  ::tutorial::_list_travel_records_rsponse_default_instance_._instance.get_mutable()->ret_ = const_cast< ::tutorial::rsponse_result*>(
      ::tutorial::rsponse_result::internal_default_instance());
}
class list_travel_records_rsponse::HasBitSetters {
 public:
  static const ::tutorial::rsponse_result& ret(const list_travel_records_rsponse* msg);
  static void set_has_ret(list_travel_records_rsponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_mileage(list_travel_records_rsponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_discharge(list_travel_records_rsponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_calorie(list_travel_records_rsponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

const ::tutorial::rsponse_result&
list_travel_records_rsponse::HasBitSetters::ret(const list_travel_records_rsponse* msg) {
  return *msg->ret_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int list_travel_records_rsponse::kRetFieldNumber;
const int list_travel_records_rsponse::kMileageFieldNumber;
const int list_travel_records_rsponse::kDischargeFieldNumber;
const int list_travel_records_rsponse::kCalorieFieldNumber;
const int list_travel_records_rsponse::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

list_travel_records_rsponse::list_travel_records_rsponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.list_travel_records_rsponse)
}
list_travel_records_rsponse::list_travel_records_rsponse(const list_travel_records_rsponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      records_(from.records_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ret()) {
    ret_ = new ::tutorial::rsponse_result(*from.ret_);
  } else {
    ret_ = nullptr;
  }
  ::memcpy(&mileage_, &from.mileage_,
    static_cast<size_t>(reinterpret_cast<char*>(&calorie_) -
    reinterpret_cast<char*>(&mileage_)) + sizeof(calorie_));
  // @@protoc_insertion_point(copy_constructor:tutorial.list_travel_records_rsponse)
}

void list_travel_records_rsponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_list_travel_records_rsponse_protocol_2eproto.base);
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&calorie_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(calorie_));
}

list_travel_records_rsponse::~list_travel_records_rsponse() {
  // @@protoc_insertion_point(destructor:tutorial.list_travel_records_rsponse)
  SharedDtor();
}

void list_travel_records_rsponse::SharedDtor() {
  if (this != internal_default_instance()) delete ret_;
}

void list_travel_records_rsponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const list_travel_records_rsponse& list_travel_records_rsponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_list_travel_records_rsponse_protocol_2eproto.base);
  return *internal_default_instance();
}


void list_travel_records_rsponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.list_travel_records_rsponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  records_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(ret_ != nullptr);
    ret_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&mileage_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&calorie_) -
        reinterpret_cast<char*>(&mileage_)) + sizeof(calorie_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* list_travel_records_rsponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<list_travel_records_rsponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .tutorial.rsponse_result ret = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tutorial::rsponse_result::_InternalParse;
        object = msg->mutable_ret();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // required double mileage = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        double val;
        ::std::memcpy(&val, ptr, 8);
        ptr += 8;
        msg->set_mileage(val);
        break;
      }
      // required double discharge = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        double val;
        ::std::memcpy(&val, ptr, 8);
        ptr += 8;
        msg->set_discharge(val);
        break;
      }
      // required double calorie = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        double val;
        ::std::memcpy(&val, ptr, 8);
        ptr += 8;
        msg->set_calorie(val);
        break;
      }
      // repeated .tutorial.list_travel_records_rsponse.travel_record records = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::tutorial::list_travel_records_rsponse_travel_record::_InternalParse;
          object = msg->add_records();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          bool ok = ctx->ParseExactRange({parser_till_end, object},
                                         ptr, newend);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool list_travel_records_rsponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.list_travel_records_rsponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .tutorial.rsponse_result ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double mileage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          HasBitSetters::set_has_mileage(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mileage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double discharge = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {
          HasBitSetters::set_has_discharge(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &discharge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double calorie = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {
          HasBitSetters::set_has_calorie(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calorie_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tutorial.list_travel_records_rsponse.travel_record records = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.list_travel_records_rsponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.list_travel_records_rsponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void list_travel_records_rsponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.list_travel_records_rsponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .tutorial.rsponse_result ret = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::ret(this), output);
  }

  // required double mileage = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->mileage(), output);
  }

  // required double discharge = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->discharge(), output);
  }

  // required double calorie = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->calorie(), output);
  }

  // repeated .tutorial.list_travel_records_rsponse.travel_record records = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->records(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.list_travel_records_rsponse)
}

::google::protobuf::uint8* list_travel_records_rsponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.list_travel_records_rsponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .tutorial.rsponse_result ret = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::ret(this), deterministic, target);
  }

  // required double mileage = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->mileage(), target);
  }

  // required double discharge = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->discharge(), target);
  }

  // required double calorie = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->calorie(), target);
  }

  // repeated .tutorial.list_travel_records_rsponse.travel_record records = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->records(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.list_travel_records_rsponse)
  return target;
}

size_t list_travel_records_rsponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tutorial.list_travel_records_rsponse)
  size_t total_size = 0;

  if (has_ret()) {
    // required .tutorial.rsponse_result ret = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ret_);
  }

  if (has_mileage()) {
    // required double mileage = 2;
    total_size += 1 + 8;
  }

  if (has_discharge()) {
    // required double discharge = 3;
    total_size += 1 + 8;
  }

  if (has_calorie()) {
    // required double calorie = 4;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t list_travel_records_rsponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.list_travel_records_rsponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .tutorial.rsponse_result ret = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ret_);

    // required double mileage = 2;
    total_size += 1 + 8;

    // required double discharge = 3;
    total_size += 1 + 8;

    // required double calorie = 4;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tutorial.list_travel_records_rsponse.travel_record records = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->records_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->records(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void list_travel_records_rsponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.list_travel_records_rsponse)
  GOOGLE_DCHECK_NE(&from, this);
  const list_travel_records_rsponse* source =
      ::google::protobuf::DynamicCastToGenerated<list_travel_records_rsponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.list_travel_records_rsponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.list_travel_records_rsponse)
    MergeFrom(*source);
  }
}

void list_travel_records_rsponse::MergeFrom(const list_travel_records_rsponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.list_travel_records_rsponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  records_.MergeFrom(from.records_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_ret()->::tutorial::rsponse_result::MergeFrom(from.ret());
    }
    if (cached_has_bits & 0x00000002u) {
      mileage_ = from.mileage_;
    }
    if (cached_has_bits & 0x00000004u) {
      discharge_ = from.discharge_;
    }
    if (cached_has_bits & 0x00000008u) {
      calorie_ = from.calorie_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void list_travel_records_rsponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.list_travel_records_rsponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void list_travel_records_rsponse::CopyFrom(const list_travel_records_rsponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.list_travel_records_rsponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool list_travel_records_rsponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->records())) return false;
  if (has_ret()) {
    if (!this->ret_->IsInitialized()) return false;
  }
  return true;
}

void list_travel_records_rsponse::Swap(list_travel_records_rsponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void list_travel_records_rsponse::InternalSwap(list_travel_records_rsponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&records_)->InternalSwap(CastToBase(&other->records_));
  swap(ret_, other->ret_);
  swap(mileage_, other->mileage_);
  swap(discharge_, other->discharge_);
  swap(calorie_, other->calorie_);
}

::google::protobuf::Metadata list_travel_records_rsponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tutorial
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::tutorial::rsponse_result* Arena::CreateMaybeMessage< ::tutorial::rsponse_result >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::rsponse_result >(arena);
}
template<> PROTOBUF_NOINLINE ::tutorial::mobile_request* Arena::CreateMaybeMessage< ::tutorial::mobile_request >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::mobile_request >(arena);
}
template<> PROTOBUF_NOINLINE ::tutorial::login_request* Arena::CreateMaybeMessage< ::tutorial::login_request >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::login_request >(arena);
}
template<> PROTOBUF_NOINLINE ::tutorial::recharge_request* Arena::CreateMaybeMessage< ::tutorial::recharge_request >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::recharge_request >(arena);
}
template<> PROTOBUF_NOINLINE ::tutorial::account_balance_request* Arena::CreateMaybeMessage< ::tutorial::account_balance_request >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::account_balance_request >(arena);
}
template<> PROTOBUF_NOINLINE ::tutorial::account_balance_response* Arena::CreateMaybeMessage< ::tutorial::account_balance_response >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::account_balance_response >(arena);
}
template<> PROTOBUF_NOINLINE ::tutorial::list_account_records_request* Arena::CreateMaybeMessage< ::tutorial::list_account_records_request >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::list_account_records_request >(arena);
}
template<> PROTOBUF_NOINLINE ::tutorial::list_account_records_response_account_record* Arena::CreateMaybeMessage< ::tutorial::list_account_records_response_account_record >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::list_account_records_response_account_record >(arena);
}
template<> PROTOBUF_NOINLINE ::tutorial::list_account_records_response* Arena::CreateMaybeMessage< ::tutorial::list_account_records_response >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::list_account_records_response >(arena);
}
template<> PROTOBUF_NOINLINE ::tutorial::list_travel_records_request* Arena::CreateMaybeMessage< ::tutorial::list_travel_records_request >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::list_travel_records_request >(arena);
}
template<> PROTOBUF_NOINLINE ::tutorial::list_travel_records_rsponse_travel_record* Arena::CreateMaybeMessage< ::tutorial::list_travel_records_rsponse_travel_record >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::list_travel_records_rsponse_travel_record >(arena);
}
template<> PROTOBUF_NOINLINE ::tutorial::list_travel_records_rsponse* Arena::CreateMaybeMessage< ::tutorial::list_travel_records_rsponse >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::list_travel_records_rsponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
